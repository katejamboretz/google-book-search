{"version":3,"sources":["components/NavTabs/index.js","components/Jumbotron/index.js","components/Input/index.js","components/Button/index.js","components/pages/utils/API.js","components/Thumbnail/index.js","components/Grid/index.js","components/BookList/index.js","components/pages/Home.js","components/pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["NavTabs","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Jumbotron","target","rel","href","Input","props","Object","assign","type","Button","_ref","_ref$type","children","onClick","concat","join","API","getBooks","query","axios","get","params","q","saveBook","bookData","console","log","post","getSaved","deleteSaved","id","delete","Thumbnail","src","role","aria-label","style","backgroundImage","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","BookList","BookListItem","_ref2$image","image","title","authors","description","link","components_Thumbnail","Home","state","books","bookSearch","handleInputChange","event","_event$target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","then","res","data","catch","err","handleBookSubmit","_this2","this","components_Jumbotron","components_Input","onChange","placeholder","components_Button","length","book","Fragment","key","volumeInfo","imageLinks","thumbnail","previewLink","Component","Saved","loadBooks","handleBookDelete","_id","App","components_NavTabs","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"sSAwBeA,MArBf,WACI,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAwC,MAA7BG,OAAOC,SAASC,SAAmB,kBAAoB,YAA/E,SAIJR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,SACHF,UAAwC,WAA7BG,OAAOC,SAASC,SAAwB,kBAAoB,YAF3E,0BCEDC,MAXf,WACE,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBC,KAAK,uCAAlD,iCCMSC,MARf,SAAeC,GACb,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,QAAAa,OAAAC,OAAA,CAAOb,UAAU,eAAec,KAAK,QAAWH,MCGvCI,MARf,SAAAC,GAAoE,IAAAC,EAAAD,EAAlDF,YAAkD,IAAAG,EAA3C,UAA2CA,EAAhCjB,EAAgCgB,EAAhChB,UAAWkB,EAAqBF,EAArBE,SAAUC,EAAWH,EAAXG,QACvD,OACEtB,EAAAC,EAAAC,cAAA,UAAQoB,QAASA,EAASnB,UAAW,CAAC,aAAD,OAAAoB,OAAsBN,GAAQd,GAAWqB,KAAK,MAChFH,qBCFQI,EAAA,CACXC,SAAU,SAAUC,GAEhB,OAAOC,IAAMC,IAAI,cAAe,CAAEC,OAAQ,CAAEC,EAAGJ,MAGnDK,SAAU,SAAUC,GAEhB,OADAC,QAAQC,IAAIF,GACLL,IAAMQ,KAAK,aAAcH,IAGpCI,SAAU,WACN,OAAOT,IAAMC,IAAI,eAGrBS,YAAa,SAAUC,GACnB,OAAOX,IAAMY,OAAO,cAAgBD,WCD7BE,MAbf,SAAAtB,GAA4B,IAAPuB,EAAOvB,EAAPuB,IACnB,OACE1C,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACVwC,KAAK,MACLC,aAAW,aACXC,MAAO,CACLC,gBAAe,OAAAvB,OAASmB,EAAT,SCRhB,SAASK,EAAT5B,GAAwC,IAAnB6B,EAAmB7B,EAAnB6B,MAAO3B,EAAYF,EAAZE,SACjC,OAAOrB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAoB,OAAcyB,EAAQ,SAAW,KAAO3B,GAIxD,SAAS4B,EAATC,GAAkC,IAAnBF,EAAmBE,EAAnBF,MAAO3B,EAAY6B,EAAZ7B,SAC3B,OAAOrB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAoB,OAAQyB,EAAQ,SAAW,KAAO3B,GAKlD,SAAS8B,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMhC,EAAY+B,EAAZ/B,SAC1B,OACErB,EAAAC,EAAAC,cAAA,OACEC,UAAWkD,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrB7B,KAAK,MAEPH,GChBA,SAASmC,EAATrC,GAAgC,IAAZE,EAAYF,EAAZE,SACzB,OAAOrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAckB,GAI9B,SAASoC,EAATP,GAMJ,IAAAQ,EAAAR,EALDS,aAKC,IAAAD,EALO,+BAKPA,EAJDE,EAICV,EAJDU,MACAC,EAGCX,EAHDW,QACAC,EAECZ,EAFDY,YACAC,EACCb,EADDa,KAEA,OACE/D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,aACRrD,EAAAC,EAAAC,cAAC8D,EAAD,CAAWtB,IAAKiB,KAElB3D,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,aACRrD,EAAAC,EAAAC,cAAA,UAAK0D,GACL5D,EAAAC,EAAAC,cAAA,qBAAa2D,GACb7D,EAAAC,EAAAC,cAAA,yBAAiB4D,GACjB9D,EAAAC,EAAAC,cAAA,KAAGS,IAAI,sBAAsBD,OAAO,SAASE,KAAMmD,GAAnD,uBC6FGE,6MAhHXC,MAAQ,CACJC,MAAO,GACPC,WAAY,MAGhBC,kBAAoB,SAAAC,GAAS,IAAAC,EAEDD,EAAM5D,OAAtB8D,EAFiBD,EAEjBC,KAAMC,EAFWF,EAEXE,MACdC,EAAKC,SAAL5D,OAAA6D,EAAA,EAAA7D,CAAA,GACKyD,EAAOC,OAIhBI,iBAAmB,SAAAP,GACfA,EAAMQ,iBAENrD,EAAIC,SAASgD,EAAKR,MAAME,YACnBW,KAAK,SAAAC,GAAG,OAAIN,EAAKC,SAAS,CAAER,MAAOa,EAAIC,SACvCC,MAAM,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,QAGlCC,iBAAmB,SAACxB,EAAOC,EAASC,EAAaH,EAAOI,GACpDtC,EAAIO,SAAS,CACT4B,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbH,MAAOA,EACPI,KAAMA,IAELgB,KAAK,SAAAC,GAAG,OAAI9C,QAAQC,IAAI,oBACxB+C,MAAM,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,8EAGzB,IAAAE,EAAAC,KACL,OACItF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAAC6C,EAAD,KACI/C,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,SACNrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,oBACAH,EAAAC,EAAAC,cAAA,cAIZF,EAAAC,EAAAC,cAAC6C,EAAD,KACI/C,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,SACNrD,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC6C,EAAD,KACI/C,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,cACNrD,EAAAC,EAAAC,cAACsF,EAAD,CACIhB,KAAK,aACLC,MAAOa,KAAKpB,MAAME,WAClBqB,SAAUH,KAAKjB,kBACfqB,YAAY,uBAGpB1F,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,aACNrD,EAAAC,EAAAC,cAACyF,EAAD,CACIrE,QAASgE,KAAKT,iBACd5D,KAAK,UACLd,UAAU,YAHd,YASRH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAKhBF,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,SACJiC,KAAKpB,MAAMC,MAAMyB,OAGX5F,EAAAC,EAAAC,cAACsD,EAAD,KACK8B,KAAKpB,MAAMC,MAAMZ,IAAI,SAAAsC,GAClB,OACI7F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACI9F,EAAAC,EAAAC,cAACuD,EAAD,CACIsC,IAAKF,EAAKG,WAAWpC,MACrBA,MAAOiC,EAAKG,WAAWpC,MACvBC,QAASgC,EAAKG,WAAWnC,QACzBC,YAAa+B,EAAKG,WAAWlC,YAC7BH,MAAOkC,EAAKG,WAAWC,WAAWC,UAClCnC,KAAM8B,EAAKG,WAAWG,cAE1BnG,EAAAC,EAAAC,cAACyF,EAAD,CACIrE,QAAS,kBAAM+D,EAAKD,iBAAiBS,EAAKG,WAAWpC,MAAOiC,EAAKG,WAAWnC,QAASgC,EAAKG,WAAWlC,YAAa+B,EAAKG,WAAWC,WAAWC,UAAWL,EAAKG,WAAWG,eAD5K,aAGAnG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAlBpBF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kCA/EbiG,aC0HJC,6MAxHXnC,MAAQ,CACJC,MAAO,GACPC,WAAY,MAGhBkC,UAAY,WACR7E,EAAIY,WACC0C,KAAK,SAAAC,GAAG,OACLN,EAAKC,SAAS,CAAER,MAAOa,EAAIC,SAC9BC,MAAM,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,QAGlCoB,iBAAmB,SAAChE,GAChBd,EAAIa,YAAYC,GACXwC,KAAK,SAAAC,GAAG,OAAIN,EAAK4B,cACjBpB,MAAM,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,yFAI9BG,KAAKgB,6CAuBA,IAAAjB,EAAAC,KACL,OACItF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAAC6C,EAAD,KACI/C,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,SACNrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,eACAH,EAAAC,EAAAC,cAAA,cAIZF,EAAAC,EAAAC,cAAC6C,EAAD,KA6BI/C,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACiD,EAAD,CAAKE,KAAK,SACJiC,KAAKpB,MAAMC,MAAMyB,OAGX5F,EAAAC,EAAAC,cAACsD,EAAD,KACK8B,KAAKpB,MAAMC,MAAMZ,IAAI,SAAAsC,GAClB,OACI7F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACI9F,EAAAC,EAAAC,cAACuD,EAAD,CACIsC,IAAKF,EAAKW,IACV5C,MAAOiC,EAAKjC,MACZC,QAASgC,EAAKhC,QACdC,YAAa+B,EAAK/B,YAClBH,MAAOkC,EAAKlC,MACZI,KAAM8B,EAAK9B,OAEf/D,EAAAC,EAAAC,cAACyF,EAAD,CACIrE,QAAS,kBAAM+D,EAAKkB,iBAAiBV,EAAKW,OAD9C,eAGAxG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAlBpBF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kCAvFZiG,aC8BLK,mLA7BX,OACEzG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACjCjE,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWT,aAP9BD,aCDZW,EAAcC,QACW,cAA7B1G,OAAOC,SAAS0G,UAEe,UAA7B3G,OAAOC,SAAS0G,UAEhB3G,OAAOC,SAAS0G,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTrC,KAAK,SAAAyC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxD,QACfmD,UAAUC,cAAcO,WAK1B3F,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB+C,MAAM,SAAA4C,GACL5F,QAAQ4F,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOhI,EAAAC,EAAAC,cAAC+H,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwB/H,OAAOC,UAC3C+H,SAAWhI,OAAOC,SAAS+H,OAIvC,OAGFhI,OAAOiI,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAA7F,OAAM8G,GAAN,sBAENtB,EAwCX,SAAiCK,GAE/BoB,MAAMpB,GACHrC,KAAK,SAAA0D,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ9G,IAAI,gBAAgB+G,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAM9D,KAAK,SAAAyC,GACjCA,EAAasB,aAAa/D,KAAK,WAC7BzE,OAAOC,SAASwI,aAKpB5B,EAAgBC,KAGnBlC,MAAM,WACLhD,QAAQC,IACN,mEAzDA6G,CAAwB5B,GAHxBD,EAAgBC,MC7BxB6B","file":"static/js/main.e533e6f3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs() {\n    return (\n        <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n                <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n                    Home\n        </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link\n                    to=\"/saved\"\n                    className={window.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}\n                >\n                    Saved\n        </Link>\n            </li>\n\n        </ul>\n    );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>Book Search</h1>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://developers.google.com/books\">\n        Powered by Google Books API\n      </a>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import axios from \"axios\";\n\n// The getBooks method retrieves books from the server\n// It accepts a \"query\" or term to search the google books api for\nexport default {\n    getBooks: function (query) {\n        // return axios.get(\"/search/\", { query });\n        return axios.get(\"/api/search\", { params: { q: query } });\n    },\n\n    saveBook: function (bookData) {\n        console.log(bookData)\n        return axios.post(\"/api/books\", bookData)\n    },\n\n    getSaved: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    deleteSaved: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Thumbnail({ src }) {\n  return (\n    <div\n      className=\"thumbnail\"\n      role=\"img\"\n      aria-label=\"Book Image\"\n      style={{\n        backgroundImage: `url(${src})`\n      }}\n    />\n  );\n}\n\nexport default Thumbnail;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Thumbnail from \"../Thumbnail\";\n// import Button from \"../Button\"\nimport { Container, Row, Col } from \"../Grid\";\n\n// Exporting both RecipeList and RecipeListItem from this file\n\n// RecipeList renders a bootstrap list item\nexport function BookList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// RecipeListItem renders a bootstrap list item containing data from the recipe api call\nexport function BookListItem({\n  image = \"https://placehold.it/300x300\",\n  title,\n  authors,\n  description,\n  link\n}) {\n  return (\n    <li className=\"list-group-item\">\n      <Container>\n        <Row>\n          <Col size=\"xs-4 sm-2\">\n            <Thumbnail src={image} />\n          </Col>\n          <Col size=\"xs-8 sm-9\">\n            <h3>{title}</h3>\n            <p>Authors: {authors}</p>\n            <p>Description: {description}</p>\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={link}>\n              Go to book!\n            </a>\n            {/* <br></br>\n            <br></br>\n            <p>\n              <Button>Save Book</Button>\n            </p> */}\n          </Col>\n        </Row>\n      </Container>\n    </li>\n  );\n}\n","import React, { Component } from \"react\";\n// import NavTabs from \"../NavTabs\";\nimport Jumbotron from \"../Jumbotron\";\n//import Nav from \"../Nav\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport API from \"./utils/API\";\nimport { BookList, BookListItem } from \"../BookList\";\nimport { Container, Row, Col } from \"../Grid\";\n\n\nclass Home extends Component {\n    state = {\n        books: [],\n        bookSearch: \"\"\n    };\n\n    handleInputChange = event => {\n\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // console.log(\"search term: \", this.state.bookSearch);\n        API.getBooks(this.state.bookSearch)\n            .then(res => this.setState({ books: res.data }))\n            .catch(err => console.log(err));\n    };\n\n    handleBookSubmit = (title, authors, description, image, link) => {\n        API.saveBook({\n            title: title,\n            authors: authors,\n            description: description,\n            image: image,\n            link: link\n        })\n            .then(res => console.log(\"save requested\"))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <Container>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            <h1 className=\"text-center\">Search for Books</h1>\n                            <br></br>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <form>\n                                <Container>\n                                    <Row>\n                                        <Col size=\"xs-9 sm-10\">\n                                            <Input\n                                                name=\"bookSearch\"\n                                                value={this.state.bookSearch}\n                                                onChange={this.handleInputChange}\n                                                placeholder=\"Search For a Book\"\n                                            />\n                                        </Col>\n                                        <Col size=\"xs-3 sm-2\">\n                                            <Button\n                                                onClick={this.handleFormSubmit}\n                                                type=\"success\"\n                                                className=\"input-lg\"\n                                            >\n                                                Search\n                                        </Button>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <br></br>\n                                </Container>\n                            </form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            {!this.state.books.length ? (\n                                <h2 className=\"text-center\">No Books to Display</h2>\n                            ) : (\n                                    <BookList>\n                                        {this.state.books.map(book => {\n                                            return (\n                                                <>\n                                                    <BookListItem\n                                                        key={book.volumeInfo.title}\n                                                        title={book.volumeInfo.title}\n                                                        authors={book.volumeInfo.authors}\n                                                        description={book.volumeInfo.description}\n                                                        image={book.volumeInfo.imageLinks.thumbnail}\n                                                        link={book.volumeInfo.previewLink}\n                                                    />\n                                                    <Button\n                                                        onClick={() => this.handleBookSubmit(book.volumeInfo.title, book.volumeInfo.authors, book.volumeInfo.description, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.previewLink)}\n                                                    >Save Book</Button>\n                                                    <br></br>\n                                                    <br></br>\n                                                </>\n                                            );\n                                        })}\n                                    </BookList>\n                                )}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n// import NavTabs from \"../NavTabs\";\nimport Jumbotron from \"../Jumbotron\";\n//import Nav from \"../Nav\";\n// import Input from \"../Input\";\nimport Button from \"../Button\";\n// import API from \"./utils/API\";\nimport { BookList, BookListItem } from \"../BookList\";\nimport { Container, Row, Col } from \"../Grid\";\nimport API from \"./utils/API\";\n\n\nclass Saved extends Component {\n    state = {\n        books: [],\n        bookSearch: \"\"\n    };\n\n    loadBooks = () => {\n        API.getSaved()\n            .then(res =>\n                this.setState({ books: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    handleBookDelete = (id) => {\n        API.deleteSaved(id)\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n    }\n\n    // handleInputChange = event => {\n\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         [name]: value\n    //     });\n    // };\n\n    // handleFormSubmit = event => {\n    //     event.preventDefault();\n    //     // console.log(\"search term: \", this.state.bookSearch);\n    //     API.getBooks(this.state.bookSearch)\n    //         .then(res => this.setState({ books: res.data }))\n    //         .catch(err => console.log(err));\n    // };\n\n    // document on load function, to get saved books from database\n\n    // delete function\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <Container>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            <h1 className=\"text-center\">Saved Books</h1>\n                            <br></br>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    {/* <Row>\n                        <Col size=\"md-12\">\n                            <form>\n                                <Container>\n                                    <Row>\n                                        <Col size=\"xs-9 sm-10\">\n                                            <Input\n                                                name=\"bookSearch\"\n                                                value={this.state.bookSearch}\n                                                onChange={this.handleInputChange}\n                                                placeholder=\"Search For a Book\"\n                                            />\n                                        </Col>\n                                        <Col size=\"xs-3 sm-2\">\n                                            <Button\n                                                onClick={this.handleFormSubmit}\n                                                type=\"success\"\n                                                className=\"input-lg\"\n                                            >\n                                                Search\n                                        </Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </form>\n                        </Col>\n                    </Row> */}\n\n                    <Row>\n                        <Col size=\"xs-12\">\n                            {!this.state.books.length ? (\n                                <h2 className=\"text-center\">No Books to Display</h2>\n                            ) : (\n                                    <BookList>\n                                        {this.state.books.map(book => {\n                                            return (\n                                                <>\n                                                    <BookListItem\n                                                        key={book._id}\n                                                        title={book.title}\n                                                        authors={book.authors}\n                                                        description={book.description}\n                                                        image={book.image}\n                                                        link={book.link}\n                                                    />\n                                                    <Button\n                                                        onClick={() => this.handleBookDelete(book._id)}\n                                                    >Delete Book</Button>\n                                                    <br></br>\n                                                    <br></br>\n                                                </>\n                                            );\n                                        })}\n                                    </BookList>\n                                )}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Saved;\n","import React, { Component } from \"react\";\n// import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavTabs from \"./components/NavTabs\";\nimport Home from \"./components/pages/Home\";\nimport Saved from \"./components/pages/Saved\";\n\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\n// function App() {\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavTabs />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <h2>Welcome to React</h2>\n//         </div>\n//         <p className=\"App-intro\">\n//           To get started, edit <code>src/App.js</code> and save to reload.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}